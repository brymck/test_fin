<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RkoDAAAAAElFTkSuQmCC
</value>
  </data>
</root>